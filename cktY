entity cktY is
  port ( Y : in  bit_vector (3 downto 0);
         R, L, load : in BIT;
         S : out BIT);
end cktY;

architecture ckt of cktY is
  
  signal B, aux : bit_vector (3 downto 0);
  
  component ffd is
    port (clk,D,P,C : in  BIT;
                  q : out BIT);
  end component;
  
  begin
    
    B(3) <= not(load and Y(3));
    B(2) <= not(load and Y(2));
    B(1) <= not(load and Y(1));
    B(0) <= not(load and Y(0));
    
    aux(3) <= '0';
    
    ff1 : ffd port map( clk => R, D => aux(3), P => B(3), C => L, q => aux(2));
    ff2 : ffd port map( clk => R, D => aux(2), P => B(2), C => L, q => aux(1));
    ff3 : ffd port map( clk => R, D => aux(1), P => B(1), C => L, q => aux(0));
    ff4 : ffd port map( clk => R, D => aux(0), P => B(0), C => L, q => S);
      
end ckt;
